{"version":3,"sources":["components/Users/UserCard/UserCard.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["UserCard","props","Paper","elevation","style","marginBottom","marginRight","width","Grid","container","item","direction","alignItems","padding","wordWrap","to","id","UserAvatar","alt","src","photos","large","defaultUserPhoto","Typography","textAlign","fontWeight","variant","paddingTop","name","status","paddingBottom","followed","Button","disabled","followingInProgress","some","size","color","onClick","unfollow","follow","styled","Avatar","Users","usersCountPerPage","useSelector","state","usersPage","pageSize","isFriends","dispatch","useDispatch","pagesCount","Math","ceil","totalUsersCount","usersElement","users","map","u","useEffect","requestUsers","currentPage","spacing","wrap","xs","Input","fullWidth","placeholder","justifyContent","marginTop","NativeSelect","fontSize","onChange","e","value","booleanValue","toLowerCase","toggleAllUsersOrFriends","onToggleAllUsersOrFriends","currentTarget","marginLeft","isFetching","Preloader","display","flexDirection","flexWrap","margin","Pagination","count","page","handlePageChange","shape","setUserCountPerPage","getUsers","createSelector","filter","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","event","pageNumber","setCurrentPage","this","React","Component","compose","connect"],"mappings":"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","file":"static/js/8.5965e644.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Avatar, Button, Grid, Paper, styled, Typography} from \"@mui/material\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultUserPhoto from \"../../../assets/images/userAvatar.jpg\";\r\nimport {UserType} from \"../../../redux/users-reducer\";\r\n\r\n\r\ntype UserCardPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: number[]\r\n} & UserType\r\n\r\nfunction UserCard(props: UserCardPropsType) {\r\n    return (\r\n        <Paper elevation={4} style={{marginBottom: '30px', marginRight: '10px', width: '220px'}}>\r\n            <Grid container item direction={\"column\"} alignItems={\"center\"}\r\n                  style={{padding: '25px 15px', wordWrap: 'break-word'}}>\r\n                <NavLink to={`/profile/${props.id}`}>\r\n                    <UserAvatar\r\n                        alt=\"Tony Stark\"\r\n                        src={props.photos.large !== null ? props.photos.large : defaultUserPhoto}/>\r\n                </NavLink>\r\n                <Typography textAlign={\"center\"} fontWeight={\"bold\"} variant={\"subtitle1\"}\r\n                            style={{paddingTop: '10px'}}>{props.name}</Typography>\r\n                <Typography textAlign={\"center\"} variant={\"caption\"}>{props.status}</Typography>\r\n                <Typography variant={\"body2\"}>{'u.location.country'}</Typography>\r\n                <Typography variant={\"body2\"} style={{paddingBottom: '15px'}}>{'u.location.city'}</Typography>\r\n                {props.followed ?\r\n                    <Button variant={\"contained\"} disabled={props.followingInProgress.some(id => id === props.id)}  size={\"small\"} color={\"secondary\"}\r\n                            onClick={() => {\r\n                                props.unfollow(props.id)\r\n                            }}>Unfollow</Button>\r\n                    : <Button variant={\"contained\"} disabled={props.followingInProgress.some(id => id === props.id)} size={\"small\"} color={\"success\"}\r\n                              onClick={() => {\r\n                                  props.follow(props.id)\r\n                              }}>Follow</Button>}\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default UserCard;\r\n\r\nconst UserAvatar = styled(Avatar)`\r\n  width: 100px;\r\n  height: 100px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;","import React, {useEffect} from 'react';\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Input,\r\n    NativeSelect,\r\n    Pagination, Select,\r\n} from \"@mui/material\";\r\nimport {requestUsers, setUserCountPerPage, toggleAllUsersOrFriends, UserType} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport UserCard from \"./UserCard/UserCard\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    handlePageChange: (event: React.ChangeEvent<unknown>, pageNumber: number) => void\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nfunction Users(props: UsersPropsType) {\r\n\r\n    const usersCountPerPage = useSelector((state: AppStateType) => state.usersPage.pageSize)\r\n    const isFriends = useSelector((state: AppStateType) => state.usersPage.isFriends)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const usersElement = props.users.map(u => {\r\n        return <UserCard name={u.name}\r\n                         key={u.id}\r\n                         id={u.id}\r\n                         status={u.status}\r\n                         followed={u.followed}\r\n                         photos={u.photos}\r\n                         follow={props.follow}\r\n                         unfollow={props.unfollow}\r\n                         followingInProgress={props.followingInProgress}/>\r\n    })\r\n\r\n\r\n    const onChangeCardsCountPerPage = (value: string) => {\r\n        dispatch(setUserCountPerPage(+value))\r\n    }\r\n    const onToggleAllUsersOrFriends = (value: string) => {\r\n        const booleanValue = value.toLowerCase() !== 'false'\r\n        dispatch(toggleAllUsersOrFriends(booleanValue))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(props.currentPage, usersCountPerPage, isFriends))\r\n    }, [usersCountPerPage, isFriends])\r\n\r\n    return (\r\n        <Grid container item direction={\"column\"}>\r\n            <Grid container spacing={2} item direction={\"row\"} wrap={\"nowrap\"} alignItems={\"center\"}\r\n                  style={{padding: '5px'}}>\r\n                <Grid item xs={12} style={{padding: '15px 0 0 30px'}}>\r\n                    <Input fullWidth placeholder=\"Search users\"/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" color=\"success\" size={\"medium\"}>Search</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item justifyContent={\"flex-end\"} direction={\"row\"}\r\n                  style={{padding: '5px', marginTop: '5px'}}>\r\n                <Grid item>\r\n                    <NativeSelect\r\n                        color={\"primary\"}\r\n                        size={\"small\"}\r\n                        style={{fontSize: '13px'}}\r\n                        onChange={(e) => onToggleAllUsersOrFriends(e.currentTarget.value)}\r\n                        value={isFriends}>\r\n                        <option value={'false'}>All</option>\r\n                        <option value={'true'}>Only followed</option>\r\n                    </NativeSelect>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item direction={\"row\"} wrap={\"wrap\"} justifyContent={\"flex-start\"}\r\n                  style={{marginTop: '10px', marginLeft: '20px'}}>\r\n                {props.isFetching ? <Preloader/> : usersElement}\r\n            </Grid>\r\n            <Grid item display={\"flex\"} alignItems={\"center\"} flexDirection={\"row\"} flexWrap={\"nowrap\"} margin={\"auto\"}>\r\n                {props.isFetching ? <></>\r\n                    : <><Pagination count={pagesCount}\r\n                                    page={props.currentPage}\r\n                                    onChange={props.handlePageChange}\r\n                                    variant=\"outlined\"\r\n                                    shape=\"rounded\"\r\n                                    color={\"primary\"}/>\r\n                        <p style={{margin: '0 10px 0 15px'}}>Show</p>\r\n                        <NativeSelect\r\n                            onChange={(e) => onChangeCardsCountPerPage(e.currentTarget.value)}\r\n                            color={\"primary\"}\r\n                            value={usersCountPerPage}>\r\n                            <option value={5}>5</option>\r\n                            <option value={10}>10</option>\r\n                            <option value={15}>15</option>\r\n                            <option value={20}>20</option>\r\n                        </NativeSelect><p style={{margin: '0 0 0 10px'}}> users per page</p>\r\n                    </>}\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Users;\r\n","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype mapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\ntype  UsersPropsType = mapStateToPropsType & mapDispatchPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    handlePageChange = (event: React.ChangeEvent<unknown>, pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n        this.props.setCurrentPage(pageNumber)\r\n    };\r\n\r\n\r\n    render() {\r\n        return <Users users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      handlePageChange={this.handlePageChange}\r\n                      isFetching={this.props.isFetching}\r\n                      followingInProgress={this.props.followingInProgress}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    // withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, requestUsers\r\n    })\r\n)(UsersContainer)\r\n\r\n\r\n"],"sourceRoot":""}